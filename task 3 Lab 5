#include <iostream>
#include <string>
using namespace std;

struct Player {
    string name;
    int score;
    Player* next;
    Player* prev;
};

void insertPlayer(Player*& head, Player*& tail, string name, int score) {
    Player* newNode = new Player();
    newNode->name = name;
    newNode->score = score;
    newNode->next = nullptr;
    newNode->prev = nullptr;

    if (!head || score < head->score) {
        newNode->next = head;
        if (head)
            head->prev = newNode;
        head = newNode;
        if (!tail)
            tail = newNode;
    } else {
        Player* temp = head;
        while (temp->next && temp->next->score < score)
            temp = temp->next;

        newNode->next = temp->next;
        newNode->prev = temp;
        if (temp->next)
            temp->next->prev = newNode;
        else
            tail = newNode;
        temp->next = newNode;
    }
}

void displayPlayers(Player* head) {
    while (head) {
        cout << head->name << " - " << head->score << endl;
        head = head->next;
    }
}

void displayLowestScore(Player* head) {
    if (head)
        cout << "Player with lowest score: " << head->name << " - " << head->score << endl;
}

void displayPlayersWithScore(Player* head, int score) {
    bool found = false;
    while (head) {
        if (head->score == score) {
            cout << head->name << " ";
            found = true;
        }
        head = head->next;
    }
    if (!found)
        cout << "No players found with score " << score;
    cout << endl;
}

int main() {
    Player* head = nullptr;
    Player* tail = nullptr;

    insertPlayer(head, tail, "Alice", 72);
    insertPlayer(head, tail, "Bob", 68);
    insertPlayer(head, tail, "Charlie", 74);

    cout << "All players:\n";
    displayPlayers(head);

    displayLowestScore(head);

    int score;
    cout << "Enter score to find players: ";
    cin >> score;
    displayPlayersWithScore(head, score);

    return 0;
}
